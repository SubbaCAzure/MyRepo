// <auto-generated />
using System;
using BBMS.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BBMS.Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230606020225_Em16")]
    partial class Em16
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BarBeer", b =>
                {
                    b.Property<int>("BarsId")
                        .HasColumnType("int");

                    b.Property<int>("BeersId")
                        .HasColumnType("int");

                    b.HasKey("BarsId", "BeersId");

                    b.HasIndex("BeersId");

                    b.ToTable("BarBeer");
                });

            modelBuilder.Entity("Domain.Models.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("Domain.Models.BarBeers", b =>
                {
                    b.Property<int>("BarId")
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.HasKey("BarId", "BeerId");

                    b.ToTable("BarBeers");
                });

            modelBuilder.Entity("Domain.Models.Beer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BarBeersBarId")
                        .HasColumnType("int");

                    b.Property<int?>("BarBeersBeerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercentageAlcoholByVolume")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("BarBeersBarId", "BarBeersBeerId");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("Domain.Models.Brewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breweries");
                });

            modelBuilder.Entity("Domain.Models.BreweryBeers", b =>
                {
                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<int>("BreweryId")
                        .HasColumnType("int");

                    b.ToTable("BreweryBeers");
                });

            modelBuilder.Entity("BarBeer", b =>
                {
                    b.HasOne("Domain.Models.Bar", null)
                        .WithMany()
                        .HasForeignKey("BarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Beer", null)
                        .WithMany()
                        .HasForeignKey("BeersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Beer", b =>
                {
                    b.HasOne("Domain.Models.BarBeers", null)
                        .WithMany("Beers")
                        .HasForeignKey("BarBeersBarId", "BarBeersBeerId");
                });

            modelBuilder.Entity("Domain.Models.BarBeers", b =>
                {
                    b.Navigation("Beers");
                });
#pragma warning restore 612, 618
        }
    }
}
